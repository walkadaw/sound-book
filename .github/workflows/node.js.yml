# Simple workflow for deploying static content to GitHub Pages
name: Deploy

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]
  
# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
    - run: npm ci
    - run: npm run build-prod
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-artifact
        path: dist
  
  deploy:
    needs: build
    environment: github-pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.1.1
        with:
          name: dist-artifact
          path: dist
      - run: sed -i 's/$UserDB = ".*"/$UserDB = "${{ secrets.DB_USER }}"/g' ./dist/sound-book/api/classes/_class.db.php
      - run: sed -i 's/$BaseDB = ".*"/$BaseDB = "${{ secrets.DB_USER }}"/g' ./dist/sound-book/api/classes/_class.db.php
      - run: sed -i 's/$PassDB = ".*";/$PassDB = "${{ secrets.DB_PASSWORD }}";/g' ./dist/sound-book/api/classes/_class.db.php
      - name: ðŸ“‚ Sync files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: bixbox0i.beget.tech
          username: bixbox0i_ciaccount
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: './dist/sound-book/'
          dangerous-clean-slate: true
          exclude: |
            **/api/tmp/**